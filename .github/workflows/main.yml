##
# @author Alexander Breuer, Fabian Hofer, Vincent Gerlach (AT uni-jena.de)
# @section DESCRIPTION
# Continuous integration using GitHub Actions.
##
name: Tsunami Lab

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: 0 0 * * *

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  
      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install cmake
          sudo apt-get install valgrind
          sudo apt-get install cppcheck
          brew install netcdf
          git submodule init
          git submodule update

      - name: Configure the project
        uses: threeal/cmake-action@v1.3.0

      - name: Static Code Analysis
        run:
          cppcheck src/ --template=gcc --force --error-exitcode=1

      - name: Sanitize
        run: |
          cmake --build build --config Debug --target sanitize_test -j 6
          ./build/sanitize_test
          cmake --build build --config Debug --target sanitize -j 6
          ./build/sanitize
          cmake --build build --config Release --target sanitize -j 6
          ./build/sanitize

      - name: Valgrind
        run: |
          cmake --build build --config Debug --target test -j 6
          valgrind build/test
          cmake --build build --config Debug --target simulation -j 6
          valgrind build/simulation

      - name: Release
        run: |
          cmake --build build --config Release --target test -j 6
          ./build/test
          cmake --build build --config Release --target simulation -j 6
          ./build/simulation

      - name: Arguments Test
        run: |
          rm -rf build
          mkdir build
          cd build
          cmake -D ENABLE_TESTMODE=ON ..
          cmake --build . --config Release --target sanitize -j 6
          echo "Test ./sanitize"
          ./sanitize
